{"id":"l8X2","dependencies":[{"name":"E:\\FUTURELAND\\_Eraser_Text\\package.json","includedInParent":true,"mtime":1587668452536}],"generated":{"js":"\"use strict\";function e(e,r,t){return r*(1-e)+e*t}function r(e,r,t){return(e-r)/(t-r)}function t(t,n,o,u,s){return e(r(t,n,o),u,s)}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.lerp=e,exports.normalise=r,exports.map=t;"},"sourceMaps":{"js":{"mappings":[{"source":"src/inc/utils.js","original":{"line":10,"column":1},"generated":{"line":1,"column":0}},{"source":"src/inc/utils.js","original":{"line":2,"column":7},"generated":{"line":1,"column":13}},{"source":"src/inc/utils.js","name":"lerp","original":{"line":2,"column":16},"generated":{"line":1,"column":22}},{"source":"src/inc/utils.js","name":"t","original":{"line":2,"column":21},"generated":{"line":1,"column":24}},{"source":"src/inc/utils.js","name":"a","original":{"line":2,"column":24},"generated":{"line":1,"column":26}},{"source":"src/inc/utils.js","name":"b","original":{"line":2,"column":27},"generated":{"line":1,"column":28}},{"source":"src/inc/utils.js","name":"a","original":{"line":3,"column":8},"generated":{"line":1,"column":31}},{"source":"src/inc/utils.js","name":"a","original":{"line":3,"column":8},"generated":{"line":1,"column":38}},{"source":"src/inc/utils.js","original":{"line":3,"column":13},"generated":{"line":1,"column":41}},{"source":"src/inc/utils.js","name":"t","original":{"line":3,"column":17},"generated":{"line":1,"column":43}},{"source":"src/inc/utils.js","name":"t","original":{"line":3,"column":22},"generated":{"line":1,"column":46}},{"source":"src/inc/utils.js","name":"b","original":{"line":3,"column":26},"generated":{"line":1,"column":48}},{"source":"src/inc/utils.js","original":{"line":5,"column":7},"generated":{"line":1,"column":50}},{"source":"src/inc/utils.js","name":"normalise","original":{"line":5,"column":16},"generated":{"line":1,"column":59}},{"source":"src/inc/utils.js","name":"t","original":{"line":5,"column":26},"generated":{"line":1,"column":61}},{"source":"src/inc/utils.js","name":"a","original":{"line":5,"column":29},"generated":{"line":1,"column":63}},{"source":"src/inc/utils.js","name":"b","original":{"line":5,"column":32},"generated":{"line":1,"column":65}},{"source":"src/inc/utils.js","original":{"line":6,"column":8},"generated":{"line":1,"column":68}},{"source":"src/inc/utils.js","name":"t","original":{"line":6,"column":9},"generated":{"line":1,"column":75}},{"source":"src/inc/utils.js","name":"a","original":{"line":6,"column":13},"generated":{"line":1,"column":77}},{"source":"src/inc/utils.js","name":"b","original":{"line":6,"column":19},"generated":{"line":1,"column":81}},{"source":"src/inc/utils.js","name":"a","original":{"line":6,"column":23},"generated":{"line":1,"column":83}},{"source":"src/inc/utils.js","original":{"line":8,"column":7},"generated":{"line":1,"column":86}},{"source":"src/inc/utils.js","name":"map","original":{"line":8,"column":16},"generated":{"line":1,"column":95}},{"source":"src/inc/utils.js","name":"t","original":{"line":8,"column":20},"generated":{"line":1,"column":97}},{"source":"src/inc/utils.js","name":"a0","original":{"line":8,"column":23},"generated":{"line":1,"column":99}},{"source":"src/inc/utils.js","name":"b0","original":{"line":8,"column":27},"generated":{"line":1,"column":101}},{"source":"src/inc/utils.js","name":"a1","original":{"line":8,"column":31},"generated":{"line":1,"column":103}},{"source":"src/inc/utils.js","name":"b1","original":{"line":8,"column":35},"generated":{"line":1,"column":105}},{"source":"src/inc/utils.js","name":"lerp","original":{"line":9,"column":8},"generated":{"line":1,"column":108}},{"source":"src/inc/utils.js","name":"lerp","original":{"line":9,"column":8},"generated":{"line":1,"column":115}},{"source":"src/inc/utils.js","name":"normalise","original":{"line":9,"column":13},"generated":{"line":1,"column":117}},{"source":"src/inc/utils.js","name":"t","original":{"line":9,"column":23},"generated":{"line":1,"column":119}},{"source":"src/inc/utils.js","name":"a0","original":{"line":9,"column":26},"generated":{"line":1,"column":121}},{"source":"src/inc/utils.js","name":"b0","original":{"line":9,"column":30},"generated":{"line":1,"column":123}},{"source":"src/inc/utils.js","name":"a1","original":{"line":9,"column":35},"generated":{"line":1,"column":126}},{"source":"src/inc/utils.js","name":"b1","original":{"line":9,"column":39},"generated":{"line":1,"column":128}},{"source":"src/inc/utils.js","original":{"line":10,"column":1},"generated":{"line":1,"column":131}},{"source":"src/inc/utils.js","original":{"line":10,"column":1},"generated":{"line":1,"column":138}},{"source":"src/inc/utils.js","original":{"line":10,"column":1},"generated":{"line":1,"column":153}},{"source":"src/inc/utils.js","original":{"line":10,"column":1},"generated":{"line":1,"column":161}},{"source":"src/inc/utils.js","original":{"line":10,"column":1},"generated":{"line":1,"column":174}},{"source":"src/inc/utils.js","original":{"line":10,"column":1},"generated":{"line":1,"column":175}},{"source":"src/inc/utils.js","original":{"line":10,"column":1},"generated":{"line":1,"column":182}},{"source":"src/inc/utils.js","original":{"line":10,"column":1},"generated":{"line":1,"column":186}},{"source":"src/inc/utils.js","original":{"line":10,"column":1},"generated":{"line":1,"column":194}},{"source":"src/inc/utils.js","original":{"line":10,"column":1},"generated":{"line":1,"column":199}},{"source":"src/inc/utils.js","original":{"line":10,"column":1},"generated":{"line":1,"column":201}},{"source":"src/inc/utils.js","original":{"line":10,"column":1},"generated":{"line":1,"column":209}},{"source":"src/inc/utils.js","original":{"line":10,"column":1},"generated":{"line":1,"column":219}},{"source":"src/inc/utils.js","original":{"line":10,"column":1},"generated":{"line":1,"column":221}},{"source":"src/inc/utils.js","original":{"line":10,"column":1},"generated":{"line":1,"column":229}},{"source":"src/inc/utils.js","original":{"line":10,"column":1},"generated":{"line":1,"column":233}}],"sources":{"src/inc/utils.js":"//méthodes Méga utiles\r\nexport function lerp(t, a, b) {\r\n\treturn a * (1 - t) + t * b\r\n}\r\nexport function normalise(t, a, b) {\r\n\treturn (t - a) / (b - a)\r\n}\r\nexport function map(t, a0, b0, a1, b1) {\r\n\treturn lerp(normalise(t, a0, b0), a1, b1)\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"32754224eb3d243637c2c7cbe8715924","cacheData":{"env":{}}}